name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-11
            cxxstd: "2a"
            os: ubuntu-22.04
          - toolset: gcc-12
            cxxstd: "20,2b"
            os: ubuntu-22.04
            install: g++-12
          - toolset: gcc-13
            cxxstd: "20,2b"
            os: ubuntu-latest
            container: ubuntu:23.04
            install: g++-13
          - toolset: clang
            compiler: clang++-14
            cxxstd: "20,2b"
            stdlib: libc++
            os: ubuntu-22.04
            install: "clang-14 libc++-14-dev"
#          - toolset: clang
#            compiler: clang++-15
#            cxxstd: "20,2b"
#            stdlib: libc++
#            os: ubuntu-22.04
#            install: "clang-15 libc++-15-dev"
#          - toolset: clang
#            compiler: clang++-16
#            cxxstd: "20,2b"
#            stdlib: libc++
#            # this clang seems to have a bug, see standard 9.5.4.11
#            cobalt_pmr: no
#            os: ubuntu-latest
#            container: ubuntu:23.04
#            install: "clang-16 libc++-16-dev"
          - toolset: clang
            cxxstd: "20,2b"
            os: macos-13
            stdlib: libc++

    runs-on: ${{matrix.os}}
    container: ${{matrix.container}}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Setup container environment
        if: matrix.container
        run: |
          apt-get update
          apt-get -y install sudo python3 git g++

      - name: Install packages
        if: matrix.install
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          mkdir -p libs/$LIBRARY
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python3 tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio
          
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam

      - name: Run tests
        run: |
          cd ../boost-root
          export STDLIB=${{matrix.stdlib}}
          export COBALT_PMR=${{matrix.cobalt_pmr}}
          ./b2 -j3 libs/$LIBRARY/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} ${STDLIB:+stdlib=$STDLIB} ${COBALT_PMR:+boost.cobalt.pmr=$COBALT_PMR} variant=debug,release

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
#          - toolset: msvc-14.2
#            cxxstd: "20,latest"
#            addrmd: 32,64
#            os: windows-2019
          - toolset: msvc-14.3
            cxxstd: "20,latest"
            addrmd: 32,64
            os: windows-2022
#          - toolset: clang-win
#            cxxstd: "20,latest"
#            addrmd: 32,64
#            os: windows-2022
          - toolset: gcc
            cxxstd: "2a"
            addrmd: 64
            os: windows-2019

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          git submodule update --init libs/test
          # temporary workaround, 
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: cmd
        run: |
          cd ../boost-root
          b2 -j3 libs/%LIBRARY%/test toolset=${{matrix.toolset}} cxxstd=${{matrix.cxxstd}} address-model=${{matrix.addrmd}} variant=debug,release embed-manifest-via=linker

  posix-cmake-subdir:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            shared: OFF
          - os: ubuntu-22.04
            shared: ON
          - os: macos-13
            shared: OFF
          - os: macos-13
            shared: ON

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        if: matrix.install
        run: sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          mkdir -p libs/$LIBRARY
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio

      - name: Use library with add_subdirectory
        run: |
          cd ../boost-root/libs/$LIBRARY/test/cmake_subdir_test
          mkdir __build__ && cd __build__
          cmake -DBUILD_SHARED_LIBS=${{matrix.shared}} ..
          cmake --build .
          ctest --output-on-failure --no-tests=error

  posix-cmake-install:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            shared: OFF
          - os: ubuntu-22.04
            shared: ON
          - os: macos-13
            shared: OFF
          - os: macos-13
            shared: ON

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        if: matrix.install
        run: sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          mkdir -p libs/$LIBRARY
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio


      - name: Configure
        run: |
          cd ../boost-root
          mkdir __build__ && cd __build__
          cmake -DBOOST_INCLUDE_LIBRARIES=$LIBRARY -DCMAKE_INSTALL_PREFIX=~/.local -DBUILD_SHARED_LIBS=${{matrix.shared}} ..

      - name: Build
        run: |
          cd ../boost-root/__build__
          cmake --build .

      - name: Install
        run: |
          cd ../boost-root/__build__
          cmake --build . --target install

      - name: Use the installed library
        run: |
          cd ../boost-root/libs/$LIBRARY/test/cmake_install_test && mkdir __build__ && cd __build__
          cmake -DCMAKE_INSTALL_PREFIX=~/.local ..
          cmake --build .
          export LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH
          ctest --output-on-failure --no-tests=error

  posix-cmake-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            shared: OFF
          - os: ubuntu-22.04
            shared: ON
          - os: macos-13
            shared: OFF
          - os: macos-13
            shared: ON

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        if: matrix.install
        run: sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          mkdir -p libs/$LIBRARY
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio

      - name: Configure
        run: |
          cd ../boost-root
          mkdir __build__ && cd __build__
          cmake -DBOOST_INCLUDE_LIBRARIES=$LIBRARY -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=${{matrix.shared}} ..

      - name: Build tests
        run: |
          cd ../boost-root/__build__
          cmake --build . --target tests

      - name: Run tests
        run: |
          cd ../boost-root/__build__
          ctest --output-on-failure --no-tests=error

  windows-cmake-subdir:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            shared: OFF

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio

      - name: Use library with add_subdirectory (Debug)
        shell: cmd
        run: |
          cd ../boost-root/libs/%LIBRARY%/test/cmake_subdir_test
          mkdir __build__ && cd __build__
          cmake -DBUILD_SHARED_LIBS=${{matrix.shared}} ..
          cmake --build . --config Debug
          ctest --output-on-failure --no-tests=error -C Debug

      - name: Use library with add_subdirectory (Release)
        shell: cmd
        run: |
          cd ../boost-root/libs/%LIBRARY%/test/cmake_subdir_test/__build__
          cmake --build . --config Release
          ctest --output-on-failure --no-tests=error -C Release

  windows-cmake-install:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            shared: OFF
          - os: windows-2022
            shared: ON

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio

      - name: Configure
        shell: cmd
        run: |
          cd ../boost-root
          mkdir __build__ && cd __build__
          cmake -DBOOST_INCLUDE_LIBRARIES=%LIBRARY% -DCMAKE_INSTALL_PREFIX=C:/cmake-prefix -DBUILD_SHARED_LIBS=${{matrix.shared}} ..

      - name: Install (Debug)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          cmake --build . --target install --config Debug

      - name: Install (Release)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          cmake --build . --target install --config Release

      - name: Use the installed library (Debug)
        shell: cmd
        run: |
          cd ../boost-root/libs/%LIBRARY%/test/cmake_install_test && mkdir __build__ && cd __build__
          cmake -DCMAKE_INSTALL_PREFIX=C:/cmake-prefix ..
          cmake --build . --config Debug
          PATH C:\cmake-prefix\bin;%PATH%
          ctest --output-on-failure --no-tests=error -C Debug

      - name: Use the installed library (Release)
        shell: cmd
        run: |
          cd ../boost-root/libs/%LIBRARY%/test/cmake_install_test/__build__
          cmake --build . --config Release
          PATH C:\cmake-prefix\bin;%PATH%
          ctest --output-on-failure --no-tests=error -C Release

  windows-cmake-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            shared: OFF
          - os: windows-2022
            shared: ON

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          git submodule update --init libs/test
          # Temporary workaround
          git submodule update --init libs/chrono
          git submodule update --init libs/ratio

      - name: Configure
        shell: cmd
        run: |
          cd ../boost-root
          mkdir __build__ && cd __build__
          cmake -DBOOST_INCLUDE_LIBRARIES=%LIBRARY% -DBUILD_TESTING=ON -DBUILD_SHARED_LIBS=${{matrix.shared}} ..

      - name: Build tests (Debug)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          cmake --build . --target tests --config Debug

      - name: Run tests (Debug)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          ctest --output-on-failure --no-tests=error -C Debug

      - name: Build tests (Release)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          cmake --build . --target tests --config Release

      - name: Run tests (Release)
        shell: cmd
        run: |
          cd ../boost-root/__build__
          ctest --output-on-failure --no-tests=error -C Release
